{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  const data = require('path');\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestPnpResolver() {\n  const data = _interopRequireDefault(require('jest-pnp-resolver'));\n\n  _jestPnpResolver = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _resolve() {\n  const data = require('resolve');\n\n  _resolve = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _resolve2 = require('resolve.exports');\n\nvar _fileWalkers = require('./fileWalkers');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst defaultResolver = (path, options) => {\n  // Yarn 2 adds support to `resolve` automatically so the pnpResolver is only\n  // needed for Yarn 1 which implements version 1 of the pnp spec\n  if (process.versions.pnp === '1') {\n    return (0, _jestPnpResolver().default)(path, options);\n  }\n\n  const resolveOptions = { ...options,\n    isDirectory: _fileWalkers.isDirectory,\n    isFile: _fileWalkers.isFile,\n    preserveSymlinks: false,\n    readPackageSync,\n    realpathSync: _fileWalkers.realpathSync\n  };\n  const pathToResolve = getPathInModule(path, resolveOptions);\n  const result = // if `getPathInModule` doesn't change the path, attempt to resolve it\n  pathToResolve === path ? (0, _resolve().sync)(pathToResolve, resolveOptions) : pathToResolve; // Dereference symlinks to ensure we don't create a separate\n  // module instance depending on how it was referenced.\n\n  return (0, _fileWalkers.realpathSync)(result);\n};\n\nvar _default = defaultResolver;\n/*\n * helper functions\n */\n\nexports.default = _default;\n\nfunction readPackageSync(_, file) {\n  return (0, _fileWalkers.readPackageCached)(file);\n}\n\nfunction getPathInModule(path, options) {\n  if (shouldIgnoreRequestForExports(path)) {\n    return path;\n  }\n\n  const segments = path.split('/');\n  let moduleName = segments.shift();\n\n  if (moduleName) {\n    // TODO: handle `#` here: https://github.com/facebook/jest/issues/12270\n    if (moduleName.startsWith('@')) {\n      moduleName = `${moduleName}/${segments.shift()}`;\n    } // self-reference\n\n\n    const closestPackageJson = (0, _fileWalkers.findClosestPackageJson)(options.basedir);\n\n    if (closestPackageJson) {\n      const pkg = (0, _fileWalkers.readPackageCached)(closestPackageJson);\n\n      if (pkg.name === moduleName && pkg.exports) {\n        const subpath = segments.join('/') || '.';\n        const resolved = (0, _resolve2.resolve)(pkg, subpath, createResolveOptions(options.conditions));\n\n        if (!resolved) {\n          throw new Error('`exports` exists, but no results - this is a bug in Jest. Please report an issue');\n        }\n\n        return (0, _path().resolve)((0, _path().dirname)(closestPackageJson), resolved);\n      }\n    }\n\n    let packageJsonPath = '';\n\n    try {\n      packageJsonPath = (0, _resolve().sync)(`${moduleName}/package.json`, options);\n    } catch {// ignore if package.json cannot be found\n    }\n\n    if (packageJsonPath && (0, _fileWalkers.isFile)(packageJsonPath)) {\n      const pkg = (0, _fileWalkers.readPackageCached)(packageJsonPath);\n\n      if (pkg.exports) {\n        const subpath = segments.join('/') || '.';\n        const resolved = (0, _resolve2.resolve)(pkg, subpath, createResolveOptions(options.conditions));\n\n        if (!resolved) {\n          throw new Error('`exports` exists, but no results - this is a bug in Jest. Please report an issue');\n        }\n\n        return (0, _path().resolve)((0, _path().dirname)(packageJsonPath), resolved);\n      }\n    }\n  }\n\n  return path;\n}\n\nfunction createResolveOptions(conditions) {\n  return conditions ? {\n    conditions,\n    unsafe: true\n  } // no conditions were passed - let's assume this is Jest internal and it should be `require`\n  : {\n    browser: false,\n    require: true\n  };\n} // if it's a relative import or an absolute path, exports are ignored\n\n\nconst shouldIgnoreRequestForExports = path => path.startsWith('.') || (0, _path().isAbsolute)(path);","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_path","data","require","_jestPnpResolver","_interopRequireDefault","_resolve","_resolve2","_fileWalkers","obj","__esModule","defaultResolver","path","options","process","versions","pnp","resolveOptions","isDirectory","isFile","preserveSymlinks","readPackageSync","realpathSync","pathToResolve","getPathInModule","result","sync","_default","_","file","readPackageCached","shouldIgnoreRequestForExports","segments","split","moduleName","shift","startsWith","closestPackageJson","findClosestPackageJson","basedir","pkg","name","subpath","join","resolved","resolve","createResolveOptions","conditions","Error","dirname","packageJsonPath","unsafe","browser","isAbsolute"],"sources":["/Users/wonjaelee/Desktop/final/node_modules/jest-config/node_modules/jest-resolve/build/defaultResolver.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _path() {\n  const data = require('path');\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestPnpResolver() {\n  const data = _interopRequireDefault(require('jest-pnp-resolver'));\n\n  _jestPnpResolver = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _resolve() {\n  const data = require('resolve');\n\n  _resolve = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _resolve2 = require('resolve.exports');\n\nvar _fileWalkers = require('./fileWalkers');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst defaultResolver = (path, options) => {\n  // Yarn 2 adds support to `resolve` automatically so the pnpResolver is only\n  // needed for Yarn 1 which implements version 1 of the pnp spec\n  if (process.versions.pnp === '1') {\n    return (0, _jestPnpResolver().default)(path, options);\n  }\n\n  const resolveOptions = {\n    ...options,\n    isDirectory: _fileWalkers.isDirectory,\n    isFile: _fileWalkers.isFile,\n    preserveSymlinks: false,\n    readPackageSync,\n    realpathSync: _fileWalkers.realpathSync\n  };\n  const pathToResolve = getPathInModule(path, resolveOptions);\n  const result = // if `getPathInModule` doesn't change the path, attempt to resolve it\n    pathToResolve === path\n      ? (0, _resolve().sync)(pathToResolve, resolveOptions)\n      : pathToResolve; // Dereference symlinks to ensure we don't create a separate\n  // module instance depending on how it was referenced.\n\n  return (0, _fileWalkers.realpathSync)(result);\n};\n\nvar _default = defaultResolver;\n/*\n * helper functions\n */\n\nexports.default = _default;\n\nfunction readPackageSync(_, file) {\n  return (0, _fileWalkers.readPackageCached)(file);\n}\n\nfunction getPathInModule(path, options) {\n  if (shouldIgnoreRequestForExports(path)) {\n    return path;\n  }\n\n  const segments = path.split('/');\n  let moduleName = segments.shift();\n\n  if (moduleName) {\n    // TODO: handle `#` here: https://github.com/facebook/jest/issues/12270\n    if (moduleName.startsWith('@')) {\n      moduleName = `${moduleName}/${segments.shift()}`;\n    } // self-reference\n\n    const closestPackageJson = (0, _fileWalkers.findClosestPackageJson)(\n      options.basedir\n    );\n\n    if (closestPackageJson) {\n      const pkg = (0, _fileWalkers.readPackageCached)(closestPackageJson);\n\n      if (pkg.name === moduleName && pkg.exports) {\n        const subpath = segments.join('/') || '.';\n        const resolved = (0, _resolve2.resolve)(\n          pkg,\n          subpath,\n          createResolveOptions(options.conditions)\n        );\n\n        if (!resolved) {\n          throw new Error(\n            '`exports` exists, but no results - this is a bug in Jest. Please report an issue'\n          );\n        }\n\n        return (0, _path().resolve)(\n          (0, _path().dirname)(closestPackageJson),\n          resolved\n        );\n      }\n    }\n\n    let packageJsonPath = '';\n\n    try {\n      packageJsonPath = (0, _resolve().sync)(\n        `${moduleName}/package.json`,\n        options\n      );\n    } catch {\n      // ignore if package.json cannot be found\n    }\n\n    if (packageJsonPath && (0, _fileWalkers.isFile)(packageJsonPath)) {\n      const pkg = (0, _fileWalkers.readPackageCached)(packageJsonPath);\n\n      if (pkg.exports) {\n        const subpath = segments.join('/') || '.';\n        const resolved = (0, _resolve2.resolve)(\n          pkg,\n          subpath,\n          createResolveOptions(options.conditions)\n        );\n\n        if (!resolved) {\n          throw new Error(\n            '`exports` exists, but no results - this is a bug in Jest. Please report an issue'\n          );\n        }\n\n        return (0, _path().resolve)(\n          (0, _path().dirname)(packageJsonPath),\n          resolved\n        );\n      }\n    }\n  }\n\n  return path;\n}\n\nfunction createResolveOptions(conditions) {\n  return conditions\n    ? {\n        conditions,\n        unsafe: true\n      } // no conditions were passed - let's assume this is Jest internal and it should be `require`\n    : {\n        browser: false,\n        require: true\n      };\n} // if it's a relative import or an absolute path, exports are ignored\n\nconst shouldIgnoreRequestForExports = path =>\n  path.startsWith('.') || (0, _path().isAbsolute)(path);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}