{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _stripAnsi() {\n  const data = _interopRequireDefault(require('strip-ansi'));\n\n  _stripAnsi = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _BaseReporter = _interopRequireDefault(require('./BaseReporter'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classPrivateMethodInitSpec(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n\n  privateSet.add(obj);\n}\n\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError('Cannot initialize the same private elements twice on an object');\n  }\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError('attempted to get private field on non-instance');\n  }\n\n  return fn;\n}\n\nconst titleSeparator = ' \\u203A ';\n\nvar _getMessageDetails = /*#__PURE__*/new WeakSet();\n\nvar _createAnnotation = /*#__PURE__*/new WeakSet();\n\nclass GitHubActionsReporter extends _BaseReporter.default {\n  constructor() {\n    super(...arguments);\n\n    _classPrivateMethodInitSpec(this, _createAnnotation);\n\n    _classPrivateMethodInitSpec(this, _getMessageDetails);\n  }\n\n  onTestFileResult(_ref, _ref2) {\n    let {\n      context\n    } = _ref;\n    let {\n      testResults\n    } = _ref2;\n    testResults.forEach(result => {\n      var _result$retryReasons;\n\n      const title = [...result.ancestorTitles, result.title].join(titleSeparator);\n      (_result$retryReasons = result.retryReasons) === null || _result$retryReasons === void 0 ? void 0 : _result$retryReasons.forEach((retryReason, index) => {\n        _classPrivateMethodGet(this, _createAnnotation, _createAnnotation2).call(this, { ..._classPrivateMethodGet(this, _getMessageDetails, _getMessageDetails2).call(this, retryReason, context.config),\n          title: `RETRY ${index + 1}: ${title}`,\n          type: 'warning'\n        });\n      });\n      result.failureMessages.forEach(failureMessage => {\n        _classPrivateMethodGet(this, _createAnnotation, _createAnnotation2).call(this, { ..._classPrivateMethodGet(this, _getMessageDetails, _getMessageDetails2).call(this, failureMessage, context.config),\n          title,\n          type: 'error'\n        });\n      });\n    });\n  }\n\n}\n\nexports.default = GitHubActionsReporter;\n\nfunction _getMessageDetails2(failureMessage, config) {\n  const {\n    message,\n    stack\n  } = (0, _jestMessageUtil().separateMessageFromStack)(failureMessage);\n  const stackLines = (0, _jestMessageUtil().getStackTraceLines)(stack);\n  const topFrame = (0, _jestMessageUtil().getTopFrame)(stackLines);\n  const normalizedStackLines = stackLines.map(line => (0, _jestMessageUtil().formatPath)(line, config));\n  const messageText = [message, ...normalizedStackLines].join('\\n');\n  return {\n    file: topFrame === null || topFrame === void 0 ? void 0 : topFrame.file,\n    line: topFrame === null || topFrame === void 0 ? void 0 : topFrame.line,\n    message: messageText\n  };\n}\n\nfunction _createAnnotation2(_ref3) {\n  let {\n    file,\n    line,\n    message,\n    title,\n    type\n  } = _ref3;\n  message = (0, _stripAnsi().default)( // copied from: https://github.com/actions/toolkit/blob/main/packages/core/src/command.ts\n  message.replace(/%/g, '%25').replace(/\\r/g, '%0D').replace(/\\n/g, '%0A'));\n  this.log(`\\n::${type} file=${file},line=${line},title=${title}::${message}`);\n}\n\n_defineProperty(GitHubActionsReporter, 'filename', __filename);","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_stripAnsi","data","_interopRequireDefault","require","_jestMessageUtil","_BaseReporter","obj","__esModule","_classPrivateMethodInitSpec","privateSet","_checkPrivateRedeclaration","add","privateCollection","has","TypeError","_defineProperty","key","enumerable","configurable","writable","_classPrivateMethodGet","receiver","fn","titleSeparator","_getMessageDetails","WeakSet","_createAnnotation","GitHubActionsReporter","constructor","onTestFileResult","context","testResults","forEach","result","_result$retryReasons","title","ancestorTitles","join","retryReasons","retryReason","index","_createAnnotation2","call","_getMessageDetails2","config","type","failureMessages","failureMessage","message","stack","separateMessageFromStack","stackLines","getStackTraceLines","topFrame","getTopFrame","normalizedStackLines","map","line","formatPath","messageText","file","replace","log","__filename"],"sources":["/Users/wonjaelee/Desktop/final/node_modules/@jest/reporters/build/GitHubActionsReporter.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _stripAnsi() {\n  const data = _interopRequireDefault(require('strip-ansi'));\n\n  _stripAnsi = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _BaseReporter = _interopRequireDefault(require('./BaseReporter'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _classPrivateMethodInitSpec(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\n\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\n      'Cannot initialize the same private elements twice on an object'\n    );\n  }\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError('attempted to get private field on non-instance');\n  }\n  return fn;\n}\n\nconst titleSeparator = ' \\u203A ';\n\nvar _getMessageDetails = /*#__PURE__*/ new WeakSet();\n\nvar _createAnnotation = /*#__PURE__*/ new WeakSet();\n\nclass GitHubActionsReporter extends _BaseReporter.default {\n  constructor(...args) {\n    super(...args);\n\n    _classPrivateMethodInitSpec(this, _createAnnotation);\n\n    _classPrivateMethodInitSpec(this, _getMessageDetails);\n  }\n\n  onTestFileResult({context}, {testResults}) {\n    testResults.forEach(result => {\n      var _result$retryReasons;\n\n      const title = [...result.ancestorTitles, result.title].join(\n        titleSeparator\n      );\n      (_result$retryReasons = result.retryReasons) === null ||\n      _result$retryReasons === void 0\n        ? void 0\n        : _result$retryReasons.forEach((retryReason, index) => {\n            _classPrivateMethodGet(\n              this,\n              _createAnnotation,\n              _createAnnotation2\n            ).call(this, {\n              ..._classPrivateMethodGet(\n                this,\n                _getMessageDetails,\n                _getMessageDetails2\n              ).call(this, retryReason, context.config),\n              title: `RETRY ${index + 1}: ${title}`,\n              type: 'warning'\n            });\n          });\n      result.failureMessages.forEach(failureMessage => {\n        _classPrivateMethodGet(\n          this,\n          _createAnnotation,\n          _createAnnotation2\n        ).call(this, {\n          ..._classPrivateMethodGet(\n            this,\n            _getMessageDetails,\n            _getMessageDetails2\n          ).call(this, failureMessage, context.config),\n          title,\n          type: 'error'\n        });\n      });\n    });\n  }\n}\n\nexports.default = GitHubActionsReporter;\n\nfunction _getMessageDetails2(failureMessage, config) {\n  const {message, stack} = (0, _jestMessageUtil().separateMessageFromStack)(\n    failureMessage\n  );\n  const stackLines = (0, _jestMessageUtil().getStackTraceLines)(stack);\n  const topFrame = (0, _jestMessageUtil().getTopFrame)(stackLines);\n  const normalizedStackLines = stackLines.map(line =>\n    (0, _jestMessageUtil().formatPath)(line, config)\n  );\n  const messageText = [message, ...normalizedStackLines].join('\\n');\n  return {\n    file: topFrame === null || topFrame === void 0 ? void 0 : topFrame.file,\n    line: topFrame === null || topFrame === void 0 ? void 0 : topFrame.line,\n    message: messageText\n  };\n}\n\nfunction _createAnnotation2({file, line, message, title, type}) {\n  message = (0, _stripAnsi().default)(\n    // copied from: https://github.com/actions/toolkit/blob/main/packages/core/src/command.ts\n    message.replace(/%/g, '%25').replace(/\\r/g, '%0D').replace(/\\n/g, '%0A')\n  );\n  this.log(`\\n::${type} file=${file},line=${line},title=${title}::${message}`);\n}\n\n_defineProperty(GitHubActionsReporter, 'filename', __filename);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}