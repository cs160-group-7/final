{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nvar _jestUtil = require('jest-util');\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst FRAMEWORK_INITIALIZER = require.resolve('./jestAdapterInit');\n\nconst jestAdapter = async (globalConfig, config, environment, runtime, testPath, sendMessageToJest) => {\n  const {\n    initialize,\n    runAndTransformResultsToJestFormat\n  } = runtime.requireInternalModule(FRAMEWORK_INITIALIZER);\n  const {\n    globals,\n    snapshotState\n  } = await initialize({\n    config,\n    environment,\n    globalConfig,\n    localRequire: runtime.requireModule.bind(runtime),\n    parentProcess: process,\n    sendMessageToJest,\n    setGlobalsForRuntime: runtime.setGlobalsForRuntime.bind(runtime),\n    testPath\n  });\n\n  if (config.fakeTimers.enableGlobally) {\n    if (config.fakeTimers.legacyFakeTimers) {\n      // during setup, this cannot be null (and it's fine to explode if it is)\n      environment.fakeTimers.useFakeTimers();\n    } else {\n      environment.fakeTimersModern.useFakeTimers();\n    }\n  }\n\n  globals.beforeEach(() => {\n    if (config.resetModules) {\n      runtime.resetModules();\n    }\n\n    if (config.clearMocks) {\n      runtime.clearAllMocks();\n    }\n\n    if (config.resetMocks) {\n      runtime.resetAllMocks();\n\n      if (config.fakeTimers.enableGlobally && config.fakeTimers.legacyFakeTimers) {\n        // during setup, this cannot be null (and it's fine to explode if it is)\n        environment.fakeTimers.useFakeTimers();\n      }\n    }\n\n    if (config.restoreMocks) {\n      runtime.restoreAllMocks();\n    }\n  });\n\n  for (const path of config.setupFilesAfterEnv) {\n    const esm = runtime.unstable_shouldLoadAsEsm(path);\n\n    if (esm) {\n      await runtime.unstable_importModule(path);\n    } else {\n      runtime.requireModule(path);\n    }\n  }\n\n  const esm = runtime.unstable_shouldLoadAsEsm(testPath);\n\n  if (esm) {\n    await runtime.unstable_importModule(testPath);\n  } else {\n    runtime.requireModule(testPath);\n  }\n\n  const results = await runAndTransformResultsToJestFormat({\n    config,\n    globalConfig,\n    testPath\n  });\n\n  _addSnapshotData(results, snapshotState); // We need to copy the results object to ensure we don't leaks the prototypes\n  // from the VM. Jasmine creates the result objects in the parent process, we\n  // should consider doing that for circus as well.\n\n\n  return (0, _jestUtil.deepCyclicCopy)(results, {\n    keepPrototype: false\n  });\n};\n\nconst _addSnapshotData = (results, snapshotState) => {\n  results.testResults.forEach(_ref => {\n    let {\n      fullName,\n      status\n    } = _ref;\n\n    if (status === 'pending' || status === 'failed') {\n      // if test is skipped or failed, we don't want to mark\n      // its snapshots as obsolete.\n      snapshotState.markSnapshotsAsCheckedForTest(fullName);\n    }\n  });\n  const uncheckedCount = snapshotState.getUncheckedCount();\n  const uncheckedKeys = snapshotState.getUncheckedKeys();\n\n  if (uncheckedCount) {\n    snapshotState.removeUncheckedKeys();\n  }\n\n  const status = snapshotState.save();\n  results.snapshot.fileDeleted = status.deleted;\n  results.snapshot.added = snapshotState.added;\n  results.snapshot.matched = snapshotState.matched;\n  results.snapshot.unmatched = snapshotState.unmatched;\n  results.snapshot.updated = snapshotState.updated;\n  results.snapshot.unchecked = !status.deleted ? uncheckedCount : 0; // Copy the array to prevent memory leaks\n\n  results.snapshot.uncheckedKeys = Array.from(uncheckedKeys);\n};\n\nvar _default = jestAdapter;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_jestUtil","require","FRAMEWORK_INITIALIZER","resolve","jestAdapter","globalConfig","config","environment","runtime","testPath","sendMessageToJest","initialize","runAndTransformResultsToJestFormat","requireInternalModule","globals","snapshotState","localRequire","requireModule","bind","parentProcess","process","setGlobalsForRuntime","fakeTimers","enableGlobally","legacyFakeTimers","useFakeTimers","fakeTimersModern","beforeEach","resetModules","clearMocks","clearAllMocks","resetMocks","resetAllMocks","restoreMocks","restoreAllMocks","path","setupFilesAfterEnv","esm","unstable_shouldLoadAsEsm","unstable_importModule","results","_addSnapshotData","deepCyclicCopy","keepPrototype","testResults","forEach","fullName","status","markSnapshotsAsCheckedForTest","uncheckedCount","getUncheckedCount","uncheckedKeys","getUncheckedKeys","removeUncheckedKeys","save","snapshot","fileDeleted","deleted","added","matched","unmatched","updated","unchecked","Array","from","_default"],"sources":["/Users/wonjaelee/Desktop/final/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nvar _jestUtil = require('jest-util');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst FRAMEWORK_INITIALIZER = require.resolve('./jestAdapterInit');\n\nconst jestAdapter = async (\n  globalConfig,\n  config,\n  environment,\n  runtime,\n  testPath,\n  sendMessageToJest\n) => {\n  const {initialize, runAndTransformResultsToJestFormat} =\n    runtime.requireInternalModule(FRAMEWORK_INITIALIZER);\n  const {globals, snapshotState} = await initialize({\n    config,\n    environment,\n    globalConfig,\n    localRequire: runtime.requireModule.bind(runtime),\n    parentProcess: process,\n    sendMessageToJest,\n    setGlobalsForRuntime: runtime.setGlobalsForRuntime.bind(runtime),\n    testPath\n  });\n\n  if (config.fakeTimers.enableGlobally) {\n    if (config.fakeTimers.legacyFakeTimers) {\n      // during setup, this cannot be null (and it's fine to explode if it is)\n      environment.fakeTimers.useFakeTimers();\n    } else {\n      environment.fakeTimersModern.useFakeTimers();\n    }\n  }\n\n  globals.beforeEach(() => {\n    if (config.resetModules) {\n      runtime.resetModules();\n    }\n\n    if (config.clearMocks) {\n      runtime.clearAllMocks();\n    }\n\n    if (config.resetMocks) {\n      runtime.resetAllMocks();\n\n      if (\n        config.fakeTimers.enableGlobally &&\n        config.fakeTimers.legacyFakeTimers\n      ) {\n        // during setup, this cannot be null (and it's fine to explode if it is)\n        environment.fakeTimers.useFakeTimers();\n      }\n    }\n\n    if (config.restoreMocks) {\n      runtime.restoreAllMocks();\n    }\n  });\n\n  for (const path of config.setupFilesAfterEnv) {\n    const esm = runtime.unstable_shouldLoadAsEsm(path);\n\n    if (esm) {\n      await runtime.unstable_importModule(path);\n    } else {\n      runtime.requireModule(path);\n    }\n  }\n\n  const esm = runtime.unstable_shouldLoadAsEsm(testPath);\n\n  if (esm) {\n    await runtime.unstable_importModule(testPath);\n  } else {\n    runtime.requireModule(testPath);\n  }\n\n  const results = await runAndTransformResultsToJestFormat({\n    config,\n    globalConfig,\n    testPath\n  });\n\n  _addSnapshotData(results, snapshotState); // We need to copy the results object to ensure we don't leaks the prototypes\n  // from the VM. Jasmine creates the result objects in the parent process, we\n  // should consider doing that for circus as well.\n\n  return (0, _jestUtil.deepCyclicCopy)(results, {\n    keepPrototype: false\n  });\n};\n\nconst _addSnapshotData = (results, snapshotState) => {\n  results.testResults.forEach(({fullName, status}) => {\n    if (status === 'pending' || status === 'failed') {\n      // if test is skipped or failed, we don't want to mark\n      // its snapshots as obsolete.\n      snapshotState.markSnapshotsAsCheckedForTest(fullName);\n    }\n  });\n  const uncheckedCount = snapshotState.getUncheckedCount();\n  const uncheckedKeys = snapshotState.getUncheckedKeys();\n\n  if (uncheckedCount) {\n    snapshotState.removeUncheckedKeys();\n  }\n\n  const status = snapshotState.save();\n  results.snapshot.fileDeleted = status.deleted;\n  results.snapshot.added = snapshotState.added;\n  results.snapshot.matched = snapshotState.matched;\n  results.snapshot.unmatched = snapshotState.unmatched;\n  results.snapshot.updated = snapshotState.updated;\n  results.snapshot.unchecked = !status.deleted ? uncheckedCount : 0; // Copy the array to prevent memory leaks\n\n  results.snapshot.uncheckedKeys = Array.from(uncheckedKeys);\n};\n\nvar _default = jestAdapter;\nexports.default = _default;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}