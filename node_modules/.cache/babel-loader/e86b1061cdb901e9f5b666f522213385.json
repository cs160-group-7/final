{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _emittery() {\n  const data = _interopRequireDefault(require('emittery'));\n\n  _emittery = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nclass TestWatcher extends _emittery().default {\n  state;\n  _isWatchMode;\n\n  constructor(_ref) {\n    let {\n      isWatchMode\n    } = _ref;\n    super();\n    this.state = {\n      interrupted: false\n    };\n    this._isWatchMode = isWatchMode;\n  }\n\n  async setState(state) {\n    Object.assign(this.state, state);\n    await this.emit('change', this.state);\n  }\n\n  isInterrupted() {\n    return this.state.interrupted;\n  }\n\n  isWatchMode() {\n    return this._isWatchMode;\n  }\n\n}\n\nexports.default = TestWatcher;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_emittery","data","_interopRequireDefault","require","obj","__esModule","TestWatcher","state","_isWatchMode","constructor","isWatchMode","interrupted","setState","assign","emit","isInterrupted"],"sources":["/Users/wonjaelee/Desktop/final/node_modules/jest-watcher/build/TestWatcher.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nfunction _emittery() {\n  const data = _interopRequireDefault(require('emittery'));\n\n  _emittery = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nclass TestWatcher extends _emittery().default {\n  state;\n  _isWatchMode;\n\n  constructor({isWatchMode}) {\n    super();\n    this.state = {\n      interrupted: false\n    };\n    this._isWatchMode = isWatchMode;\n  }\n\n  async setState(state) {\n    Object.assign(this.state, state);\n    await this.emit('change', this.state);\n  }\n\n  isInterrupted() {\n    return this.state.interrupted;\n  }\n\n  isWatchMode() {\n    return this._isWatchMode;\n  }\n}\n\nexports.default = TestWatcher;\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,SAASC,SAAT,GAAqB;EACnB,MAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAAnC;;EAEAH,SAAS,GAAG,YAAY;IACtB,OAAOC,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;;AAED,SAASC,sBAAT,CAAgCE,GAAhC,EAAqC;EACnC,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAACL,OAAO,EAAEK;EAAV,CAArC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,WAAN,SAA0BN,SAAS,GAAGD,OAAtC,CAA8C;EAC5CQ,KAAK;EACLC,YAAY;;EAEZC,WAAW,OAAgB;IAAA,IAAf;MAACC;IAAD,CAAe;IACzB;IACA,KAAKH,KAAL,GAAa;MACXI,WAAW,EAAE;IADF,CAAb;IAGA,KAAKH,YAAL,GAAoBE,WAApB;EACD;;EAEa,MAARE,QAAQ,CAACL,KAAD,EAAQ;IACpBZ,MAAM,CAACkB,MAAP,CAAc,KAAKN,KAAnB,EAA0BA,KAA1B;IACA,MAAM,KAAKO,IAAL,CAAU,QAAV,EAAoB,KAAKP,KAAzB,CAAN;EACD;;EAEDQ,aAAa,GAAG;IACd,OAAO,KAAKR,KAAL,CAAWI,WAAlB;EACD;;EAEDD,WAAW,GAAG;IACZ,OAAO,KAAKF,YAAZ;EACD;;AAvB2C;;AA0B9CX,OAAO,CAACE,OAAR,GAAkBO,WAAlB"},"metadata":{},"sourceType":"script"}