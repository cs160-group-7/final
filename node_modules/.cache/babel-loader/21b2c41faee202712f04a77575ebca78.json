{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = watch;\n\nfunction path() {\n  const data = _interopRequireWildcard(require('path'));\n\n  path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _ansiEscapes() {\n  const data = _interopRequireDefault(require('ansi-escapes'));\n\n  _ansiEscapes = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _exit() {\n  const data = _interopRequireDefault(require('exit'));\n\n  _exit = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _slash() {\n  const data = _interopRequireDefault(require('slash'));\n\n  _slash = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestValidate() {\n  const data = require('jest-validate');\n\n  _jestValidate = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestWatcher() {\n  const data = require('jest-watcher');\n\n  _jestWatcher = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _FailedTestsCache = _interopRequireDefault(require('./FailedTestsCache'));\n\nvar _SearchSource = _interopRequireDefault(require('./SearchSource'));\n\nvar _getChangedFilesPromise = _interopRequireDefault(require('./getChangedFilesPromise'));\n\nvar _activeFiltersMessage = _interopRequireDefault(require('./lib/activeFiltersMessage'));\n\nvar _createContext = _interopRequireDefault(require('./lib/createContext'));\n\nvar _isValidPath = _interopRequireDefault(require('./lib/isValidPath'));\n\nvar _updateGlobalConfig = _interopRequireDefault(require('./lib/updateGlobalConfig'));\n\nvar _watchPluginsHelpers = require('./lib/watchPluginsHelpers');\n\nvar _FailedTestsInteractive = _interopRequireDefault(require('./plugins/FailedTestsInteractive'));\n\nvar _Quit = _interopRequireDefault(require('./plugins/Quit'));\n\nvar _TestNamePattern = _interopRequireDefault(require('./plugins/TestNamePattern'));\n\nvar _TestPathPattern = _interopRequireDefault(require('./plugins/TestPathPattern'));\n\nvar _UpdateSnapshots = _interopRequireDefault(require('./plugins/UpdateSnapshots'));\n\nvar _UpdateSnapshotsInteractive = _interopRequireDefault(require('./plugins/UpdateSnapshotsInteractive'));\n\nvar _runJest = _interopRequireDefault(require('./runJest'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== 'function') return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== 'object' && typeof obj !== 'function') {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst {\n  print: preRunMessagePrint\n} = _jestUtil().preRunMessage;\n\nlet hasExitListener = false;\nconst INTERNAL_PLUGINS = [_FailedTestsInteractive.default, _TestPathPattern.default, _TestNamePattern.default, _UpdateSnapshots.default, _UpdateSnapshotsInteractive.default, _Quit.default];\nconst RESERVED_KEY_PLUGINS = new Map([[_UpdateSnapshots.default, {\n  forbiddenOverwriteMessage: 'updating snapshots',\n  key: 'u'\n}], [_UpdateSnapshotsInteractive.default, {\n  forbiddenOverwriteMessage: 'updating snapshots interactively',\n  key: 'i'\n}], [_Quit.default, {\n  forbiddenOverwriteMessage: 'quitting watch mode'\n}]]);\n\nasync function watch(initialGlobalConfig, contexts, outputStream, hasteMapInstances) {\n  let stdin = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : process.stdin;\n  let hooks = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : new (_jestWatcher().JestHook)();\n  let filter = arguments.length > 6 ? arguments[6] : undefined;\n  // `globalConfig` will be constantly updated and reassigned as a result of\n  // watch mode interactions.\n  let globalConfig = initialGlobalConfig;\n  let activePlugin;\n  globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n    mode: globalConfig.watch ? 'watch' : 'watchAll',\n    passWithNoTests: true\n  });\n\n  const updateConfigAndRun = function () {\n    let {\n      bail,\n      changedSince,\n      collectCoverage,\n      collectCoverageFrom,\n      collectCoverageOnlyFrom,\n      coverageDirectory,\n      coverageReporters,\n      findRelatedTests,\n      mode,\n      nonFlagArgs,\n      notify,\n      notifyMode,\n      onlyFailures,\n      reporters,\n      testNamePattern,\n      testPathPattern,\n      updateSnapshot,\n      verbose\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const previousUpdateSnapshot = globalConfig.updateSnapshot;\n    globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n      bail,\n      changedSince,\n      collectCoverage,\n      collectCoverageFrom,\n      collectCoverageOnlyFrom,\n      coverageDirectory,\n      coverageReporters,\n      findRelatedTests,\n      mode,\n      nonFlagArgs,\n      notify,\n      notifyMode,\n      onlyFailures,\n      reporters,\n      testNamePattern,\n      testPathPattern,\n      updateSnapshot,\n      verbose\n    });\n    startRun(globalConfig);\n    globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n      // updateSnapshot is not sticky after a run.\n      updateSnapshot: previousUpdateSnapshot === 'all' ? 'none' : previousUpdateSnapshot\n    });\n  };\n\n  const watchPlugins = INTERNAL_PLUGINS.map(InternalPlugin => new InternalPlugin({\n    stdin,\n    stdout: outputStream\n  }));\n  watchPlugins.forEach(plugin => {\n    const hookSubscriber = hooks.getSubscriber();\n\n    if (plugin.apply) {\n      plugin.apply(hookSubscriber);\n    }\n  });\n\n  if (globalConfig.watchPlugins != null) {\n    const watchPluginKeys = new Map();\n\n    for (const plugin of watchPlugins) {\n      const reservedInfo = RESERVED_KEY_PLUGINS.get(plugin.constructor) || {};\n      const key = reservedInfo.key || getPluginKey(plugin, globalConfig);\n\n      if (!key) {\n        continue;\n      }\n\n      const {\n        forbiddenOverwriteMessage\n      } = reservedInfo;\n      watchPluginKeys.set(key, {\n        forbiddenOverwriteMessage,\n        overwritable: forbiddenOverwriteMessage == null,\n        plugin\n      });\n    }\n\n    for (const pluginWithConfig of globalConfig.watchPlugins) {\n      let plugin;\n\n      try {\n        const ThirdPartyPlugin = await (0, _jestUtil().requireOrImportModule)(pluginWithConfig.path);\n        plugin = new ThirdPartyPlugin({\n          config: pluginWithConfig.config,\n          stdin,\n          stdout: outputStream\n        });\n      } catch (error) {\n        const errorWithContext = new Error(`Failed to initialize watch plugin \"${_chalk().default.bold((0, _slash().default)(path().relative(process.cwd(), pluginWithConfig.path)))}\":\\n\\n${(0, _jestMessageUtil().formatExecError)(error, contexts[0].config, {\n          noStackTrace: false\n        })}`);\n        delete errorWithContext.stack;\n        return Promise.reject(errorWithContext);\n      }\n\n      checkForConflicts(watchPluginKeys, plugin, globalConfig);\n      const hookSubscriber = hooks.getSubscriber();\n\n      if (plugin.apply) {\n        plugin.apply(hookSubscriber);\n      }\n\n      watchPlugins.push(plugin);\n    }\n  }\n\n  const failedTestsCache = new _FailedTestsCache.default();\n  let searchSources = contexts.map(context => ({\n    context,\n    searchSource: new _SearchSource.default(context)\n  }));\n  let isRunning = false;\n  let testWatcher;\n  let shouldDisplayWatchUsage = true;\n  let isWatchUsageDisplayed = false;\n\n  const emitFileChange = () => {\n    if (hooks.isUsed('onFileChange')) {\n      const projects = searchSources.map(_ref => {\n        let {\n          context,\n          searchSource\n        } = _ref;\n        return {\n          config: context.config,\n          testPaths: searchSource.findMatchingTests('').tests.map(t => t.path)\n        };\n      });\n      hooks.getEmitter().onFileChange({\n        projects\n      });\n    }\n  };\n\n  emitFileChange();\n  hasteMapInstances.forEach((hasteMapInstance, index) => {\n    hasteMapInstance.on('change', _ref2 => {\n      let {\n        eventsQueue,\n        hasteFS,\n        moduleMap\n      } = _ref2;\n      const validPaths = eventsQueue.filter(_ref3 => {\n        let {\n          filePath\n        } = _ref3;\n        return (0, _isValidPath.default)(globalConfig, filePath);\n      });\n\n      if (validPaths.length) {\n        const context = contexts[index] = (0, _createContext.default)(contexts[index].config, {\n          hasteFS,\n          moduleMap\n        });\n        activePlugin = null;\n        searchSources = searchSources.slice();\n        searchSources[index] = {\n          context,\n          searchSource: new _SearchSource.default(context)\n        };\n        emitFileChange();\n        startRun(globalConfig);\n      }\n    });\n  });\n\n  if (!hasExitListener) {\n    hasExitListener = true;\n    process.on('exit', () => {\n      if (activePlugin) {\n        outputStream.write(_ansiEscapes().default.cursorDown());\n        outputStream.write(_ansiEscapes().default.eraseDown);\n      }\n    });\n  }\n\n  const startRun = globalConfig => {\n    if (isRunning) {\n      return Promise.resolve(null);\n    }\n\n    testWatcher = new (_jestWatcher().TestWatcher)({\n      isWatchMode: true\n    });\n    _jestUtil().isInteractive && outputStream.write(_jestUtil().specialChars.CLEAR);\n    preRunMessagePrint(outputStream);\n    isRunning = true;\n    const configs = contexts.map(context => context.config);\n    const changedFilesPromise = (0, _getChangedFilesPromise.default)(globalConfig, configs);\n    return (0, _runJest.default)({\n      changedFilesPromise,\n      contexts,\n      failedTestsCache,\n      filter,\n      globalConfig,\n      jestHooks: hooks.getEmitter(),\n      onComplete: results => {\n        isRunning = false;\n        hooks.getEmitter().onTestRunComplete(results); // Create a new testWatcher instance so that re-runs won't be blocked.\n        // The old instance that was passed to Jest will still be interrupted\n        // and prevent test runs from the previous run.\n\n        testWatcher = new (_jestWatcher().TestWatcher)({\n          isWatchMode: true\n        }); // Do not show any Watch Usage related stuff when running in a\n        // non-interactive environment\n\n        if (_jestUtil().isInteractive) {\n          if (shouldDisplayWatchUsage) {\n            outputStream.write(usage(globalConfig, watchPlugins));\n            shouldDisplayWatchUsage = false; // hide Watch Usage after first run\n\n            isWatchUsageDisplayed = true;\n          } else {\n            outputStream.write(showToggleUsagePrompt());\n            shouldDisplayWatchUsage = false;\n            isWatchUsageDisplayed = false;\n          }\n        } else {\n          outputStream.write('\\n');\n        }\n\n        failedTestsCache.setTestResults(results.testResults);\n      },\n      outputStream,\n      startRun,\n      testWatcher\n    }).catch((error // Errors thrown inside `runJest`, e.g. by resolvers, are caught here for\n    ) => // continuous watch mode execution. We need to reprint them to the\n    // terminal and give just a little bit of extra space so they fit below\n    // `preRunMessagePrint` message nicely.\n    console.error(`\\n\\n${(0, _jestMessageUtil().formatExecError)(error, contexts[0].config, {\n      noStackTrace: false\n    })}`));\n  };\n\n  const onKeypress = key => {\n    if (key === _jestWatcher().KEYS.CONTROL_C || key === _jestWatcher().KEYS.CONTROL_D) {\n      if (typeof stdin.setRawMode === 'function') {\n        stdin.setRawMode(false);\n      }\n\n      outputStream.write('\\n');\n      (0, _exit().default)(0);\n      return;\n    }\n\n    if (activePlugin != null && activePlugin.onKey) {\n      // if a plugin is activate, Jest should let it handle keystrokes, so ignore\n      // them here\n      activePlugin.onKey(key);\n      return;\n    } // Abort test run\n\n\n    const pluginKeys = (0, _watchPluginsHelpers.getSortedUsageRows)(watchPlugins, globalConfig).map(usage => Number(usage.key).toString(16));\n\n    if (isRunning && testWatcher && ['q', _jestWatcher().KEYS.ENTER, 'a', 'o', 'f'].concat(pluginKeys).includes(key)) {\n      testWatcher.setState({\n        interrupted: true\n      });\n      return;\n    }\n\n    const matchingWatchPlugin = (0, _watchPluginsHelpers.filterInteractivePlugins)(watchPlugins, globalConfig).find(plugin => getPluginKey(plugin, globalConfig) === key);\n\n    if (matchingWatchPlugin != null) {\n      if (isRunning) {\n        testWatcher.setState({\n          interrupted: true\n        });\n        return;\n      } // \"activate\" the plugin, which has jest ignore keystrokes so the plugin\n      // can handle them\n\n\n      activePlugin = matchingWatchPlugin;\n\n      if (activePlugin.run) {\n        activePlugin.run(globalConfig, updateConfigAndRun).then(shouldRerun => {\n          activePlugin = null;\n\n          if (shouldRerun) {\n            updateConfigAndRun();\n          }\n        }, () => {\n          activePlugin = null;\n          onCancelPatternPrompt();\n        });\n      } else {\n        activePlugin = null;\n      }\n    }\n\n    switch (key) {\n      case _jestWatcher().KEYS.ENTER:\n        startRun(globalConfig);\n        break;\n\n      case 'a':\n        globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n          mode: 'watchAll',\n          testNamePattern: '',\n          testPathPattern: ''\n        });\n        startRun(globalConfig);\n        break;\n\n      case 'c':\n        updateConfigAndRun({\n          mode: 'watch',\n          testNamePattern: '',\n          testPathPattern: ''\n        });\n        break;\n\n      case 'f':\n        globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n          onlyFailures: !globalConfig.onlyFailures\n        });\n        startRun(globalConfig);\n        break;\n\n      case 'o':\n        globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n          mode: 'watch',\n          testNamePattern: '',\n          testPathPattern: ''\n        });\n        startRun(globalConfig);\n        break;\n\n      case '?':\n        break;\n\n      case 'w':\n        if (!shouldDisplayWatchUsage && !isWatchUsageDisplayed) {\n          outputStream.write(_ansiEscapes().default.cursorUp());\n          outputStream.write(_ansiEscapes().default.eraseDown);\n          outputStream.write(usage(globalConfig, watchPlugins));\n          isWatchUsageDisplayed = true;\n          shouldDisplayWatchUsage = false;\n        }\n\n        break;\n    }\n  };\n\n  const onCancelPatternPrompt = () => {\n    outputStream.write(_ansiEscapes().default.cursorHide);\n    outputStream.write(_jestUtil().specialChars.CLEAR);\n    outputStream.write(usage(globalConfig, watchPlugins));\n    outputStream.write(_ansiEscapes().default.cursorShow);\n  };\n\n  if (typeof stdin.setRawMode === 'function') {\n    stdin.setRawMode(true);\n    stdin.resume();\n    stdin.setEncoding('utf8');\n    stdin.on('data', onKeypress);\n  }\n\n  startRun(globalConfig);\n  return Promise.resolve();\n}\n\nconst checkForConflicts = (watchPluginKeys, plugin, globalConfig) => {\n  const key = getPluginKey(plugin, globalConfig);\n\n  if (!key) {\n    return;\n  }\n\n  const conflictor = watchPluginKeys.get(key);\n\n  if (!conflictor || conflictor.overwritable) {\n    watchPluginKeys.set(key, {\n      overwritable: false,\n      plugin\n    });\n    return;\n  }\n\n  let error;\n\n  if (conflictor.forbiddenOverwriteMessage) {\n    error = `\n  Watch plugin ${_chalk().default.bold.red(getPluginIdentifier(plugin))} attempted to register key ${_chalk().default.bold.red(`<${key}>`)},\n  that is reserved internally for ${_chalk().default.bold.red(conflictor.forbiddenOverwriteMessage)}.\n  Please change the configuration key for this plugin.`.trim();\n  } else {\n    const plugins = [conflictor.plugin, plugin].map(p => _chalk().default.bold.red(getPluginIdentifier(p))).join(' and ');\n    error = `\n  Watch plugins ${plugins} both attempted to register key ${_chalk().default.bold.red(`<${key}>`)}.\n  Please change the key configuration for one of the conflicting plugins to avoid overlap.`.trim();\n  }\n\n  throw new (_jestValidate().ValidationError)('Watch plugin configuration error', error);\n};\n\nconst getPluginIdentifier = (plugin // This breaks as `displayName` is not defined as a static, but since\n) => // WatchPlugin is an interface, and it is my understanding interface\n// static fields are not definable anymore, no idea how to circumvent\n// this :-(\n// @ts-expect-error: leave `displayName` be.\nplugin.constructor.displayName || plugin.constructor.name;\n\nconst getPluginKey = (plugin, globalConfig) => {\n  if (typeof plugin.getUsageInfo === 'function') {\n    return (plugin.getUsageInfo(globalConfig) || {\n      key: null\n    }).key;\n  }\n\n  return null;\n};\n\nconst usage = function (globalConfig, watchPlugins) {\n  let delimiter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '\\n';\n  const messages = [(0, _activeFiltersMessage.default)(globalConfig), globalConfig.testPathPattern || globalConfig.testNamePattern ? `${_chalk().default.dim(' \\u203A Press ')}c${_chalk().default.dim(' to clear filters.')}` : null, `\\n${_chalk().default.bold('Watch Usage')}`, globalConfig.watch ? `${_chalk().default.dim(' \\u203A Press ')}a${_chalk().default.dim(' to run all tests.')}` : null, globalConfig.onlyFailures ? `${_chalk().default.dim(' \\u203A Press ')}f${_chalk().default.dim(' to quit \"only failed tests\" mode.')}` : `${_chalk().default.dim(' \\u203A Press ')}f${_chalk().default.dim(' to run only failed tests.')}`, (globalConfig.watchAll || globalConfig.testPathPattern || globalConfig.testNamePattern) && !globalConfig.noSCM ? `${_chalk().default.dim(' \\u203A Press ')}o${_chalk().default.dim(' to only run tests related to changed files.')}` : null, ...(0, _watchPluginsHelpers.getSortedUsageRows)(watchPlugins, globalConfig).map(plugin => `${_chalk().default.dim(' \\u203A Press')} ${plugin.key} ${_chalk().default.dim(`to ${plugin.prompt}.`)}`), `${_chalk().default.dim(' \\u203A Press ')}Enter${_chalk().default.dim(' to trigger a test run.')}`];\n  return `${messages.filter(message => !!message).join(delimiter)}\\n`;\n};\n\nconst showToggleUsagePrompt = () => '\\n' + `${_chalk().default.bold('Watch Usage: ')}${_chalk().default.dim('Press ')}w${_chalk().default.dim(' to show more.')}`;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","watch","path","data","_interopRequireWildcard","require","_ansiEscapes","_interopRequireDefault","_chalk","_exit","_slash","_jestMessageUtil","_jestUtil","_jestValidate","_jestWatcher","_FailedTestsCache","_SearchSource","_getChangedFilesPromise","_activeFiltersMessage","_createContext","_isValidPath","_updateGlobalConfig","_watchPluginsHelpers","_FailedTestsInteractive","_Quit","_TestNamePattern","_TestPathPattern","_UpdateSnapshots","_UpdateSnapshotsInteractive","_runJest","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","print","preRunMessagePrint","preRunMessage","hasExitListener","INTERNAL_PLUGINS","RESERVED_KEY_PLUGINS","Map","forbiddenOverwriteMessage","initialGlobalConfig","contexts","outputStream","hasteMapInstances","stdin","process","hooks","JestHook","filter","globalConfig","activePlugin","mode","passWithNoTests","updateConfigAndRun","bail","changedSince","collectCoverage","collectCoverageFrom","collectCoverageOnlyFrom","coverageDirectory","coverageReporters","findRelatedTests","nonFlagArgs","notify","notifyMode","onlyFailures","reporters","testNamePattern","testPathPattern","updateSnapshot","verbose","previousUpdateSnapshot","startRun","watchPlugins","map","InternalPlugin","stdout","forEach","plugin","hookSubscriber","getSubscriber","apply","watchPluginKeys","reservedInfo","constructor","getPluginKey","overwritable","pluginWithConfig","ThirdPartyPlugin","requireOrImportModule","config","error","errorWithContext","Error","bold","relative","cwd","formatExecError","noStackTrace","stack","Promise","reject","checkForConflicts","push","failedTestsCache","searchSources","context","searchSource","isRunning","testWatcher","shouldDisplayWatchUsage","isWatchUsageDisplayed","emitFileChange","isUsed","projects","testPaths","findMatchingTests","tests","t","getEmitter","onFileChange","hasteMapInstance","index","on","eventsQueue","hasteFS","moduleMap","validPaths","filePath","length","slice","write","cursorDown","eraseDown","resolve","TestWatcher","isWatchMode","isInteractive","specialChars","CLEAR","configs","changedFilesPromise","jestHooks","onComplete","results","onTestRunComplete","usage","showToggleUsagePrompt","setTestResults","testResults","catch","console","onKeypress","KEYS","CONTROL_C","CONTROL_D","setRawMode","onKey","pluginKeys","getSortedUsageRows","Number","toString","ENTER","concat","includes","setState","interrupted","matchingWatchPlugin","filterInteractivePlugins","find","run","then","shouldRerun","onCancelPatternPrompt","cursorUp","cursorHide","cursorShow","resume","setEncoding","conflictor","red","getPluginIdentifier","trim","plugins","p","join","ValidationError","displayName","name","getUsageInfo","delimiter","messages","dim","watchAll","noSCM","prompt","message"],"sources":["/Users/wonjaelee/Desktop/final/node_modules/@jest/core/build/watch.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = watch;\n\nfunction path() {\n  const data = _interopRequireWildcard(require('path'));\n\n  path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _ansiEscapes() {\n  const data = _interopRequireDefault(require('ansi-escapes'));\n\n  _ansiEscapes = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _exit() {\n  const data = _interopRequireDefault(require('exit'));\n\n  _exit = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _slash() {\n  const data = _interopRequireDefault(require('slash'));\n\n  _slash = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestValidate() {\n  const data = require('jest-validate');\n\n  _jestValidate = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestWatcher() {\n  const data = require('jest-watcher');\n\n  _jestWatcher = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _FailedTestsCache = _interopRequireDefault(require('./FailedTestsCache'));\n\nvar _SearchSource = _interopRequireDefault(require('./SearchSource'));\n\nvar _getChangedFilesPromise = _interopRequireDefault(\n  require('./getChangedFilesPromise')\n);\n\nvar _activeFiltersMessage = _interopRequireDefault(\n  require('./lib/activeFiltersMessage')\n);\n\nvar _createContext = _interopRequireDefault(require('./lib/createContext'));\n\nvar _isValidPath = _interopRequireDefault(require('./lib/isValidPath'));\n\nvar _updateGlobalConfig = _interopRequireDefault(\n  require('./lib/updateGlobalConfig')\n);\n\nvar _watchPluginsHelpers = require('./lib/watchPluginsHelpers');\n\nvar _FailedTestsInteractive = _interopRequireDefault(\n  require('./plugins/FailedTestsInteractive')\n);\n\nvar _Quit = _interopRequireDefault(require('./plugins/Quit'));\n\nvar _TestNamePattern = _interopRequireDefault(\n  require('./plugins/TestNamePattern')\n);\n\nvar _TestPathPattern = _interopRequireDefault(\n  require('./plugins/TestPathPattern')\n);\n\nvar _UpdateSnapshots = _interopRequireDefault(\n  require('./plugins/UpdateSnapshots')\n);\n\nvar _UpdateSnapshotsInteractive = _interopRequireDefault(\n  require('./plugins/UpdateSnapshotsInteractive')\n);\n\nvar _runJest = _interopRequireDefault(require('./runJest'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== 'function') return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst {print: preRunMessagePrint} = _jestUtil().preRunMessage;\n\nlet hasExitListener = false;\nconst INTERNAL_PLUGINS = [\n  _FailedTestsInteractive.default,\n  _TestPathPattern.default,\n  _TestNamePattern.default,\n  _UpdateSnapshots.default,\n  _UpdateSnapshotsInteractive.default,\n  _Quit.default\n];\nconst RESERVED_KEY_PLUGINS = new Map([\n  [\n    _UpdateSnapshots.default,\n    {\n      forbiddenOverwriteMessage: 'updating snapshots',\n      key: 'u'\n    }\n  ],\n  [\n    _UpdateSnapshotsInteractive.default,\n    {\n      forbiddenOverwriteMessage: 'updating snapshots interactively',\n      key: 'i'\n    }\n  ],\n  [\n    _Quit.default,\n    {\n      forbiddenOverwriteMessage: 'quitting watch mode'\n    }\n  ]\n]);\n\nasync function watch(\n  initialGlobalConfig,\n  contexts,\n  outputStream,\n  hasteMapInstances,\n  stdin = process.stdin,\n  hooks = new (_jestWatcher().JestHook)(),\n  filter\n) {\n  // `globalConfig` will be constantly updated and reassigned as a result of\n  // watch mode interactions.\n  let globalConfig = initialGlobalConfig;\n  let activePlugin;\n  globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n    mode: globalConfig.watch ? 'watch' : 'watchAll',\n    passWithNoTests: true\n  });\n\n  const updateConfigAndRun = ({\n    bail,\n    changedSince,\n    collectCoverage,\n    collectCoverageFrom,\n    collectCoverageOnlyFrom,\n    coverageDirectory,\n    coverageReporters,\n    findRelatedTests,\n    mode,\n    nonFlagArgs,\n    notify,\n    notifyMode,\n    onlyFailures,\n    reporters,\n    testNamePattern,\n    testPathPattern,\n    updateSnapshot,\n    verbose\n  } = {}) => {\n    const previousUpdateSnapshot = globalConfig.updateSnapshot;\n    globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n      bail,\n      changedSince,\n      collectCoverage,\n      collectCoverageFrom,\n      collectCoverageOnlyFrom,\n      coverageDirectory,\n      coverageReporters,\n      findRelatedTests,\n      mode,\n      nonFlagArgs,\n      notify,\n      notifyMode,\n      onlyFailures,\n      reporters,\n      testNamePattern,\n      testPathPattern,\n      updateSnapshot,\n      verbose\n    });\n    startRun(globalConfig);\n    globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n      // updateSnapshot is not sticky after a run.\n      updateSnapshot:\n        previousUpdateSnapshot === 'all' ? 'none' : previousUpdateSnapshot\n    });\n  };\n\n  const watchPlugins = INTERNAL_PLUGINS.map(\n    InternalPlugin =>\n      new InternalPlugin({\n        stdin,\n        stdout: outputStream\n      })\n  );\n  watchPlugins.forEach(plugin => {\n    const hookSubscriber = hooks.getSubscriber();\n\n    if (plugin.apply) {\n      plugin.apply(hookSubscriber);\n    }\n  });\n\n  if (globalConfig.watchPlugins != null) {\n    const watchPluginKeys = new Map();\n\n    for (const plugin of watchPlugins) {\n      const reservedInfo = RESERVED_KEY_PLUGINS.get(plugin.constructor) || {};\n      const key = reservedInfo.key || getPluginKey(plugin, globalConfig);\n\n      if (!key) {\n        continue;\n      }\n\n      const {forbiddenOverwriteMessage} = reservedInfo;\n      watchPluginKeys.set(key, {\n        forbiddenOverwriteMessage,\n        overwritable: forbiddenOverwriteMessage == null,\n        plugin\n      });\n    }\n\n    for (const pluginWithConfig of globalConfig.watchPlugins) {\n      let plugin;\n\n      try {\n        const ThirdPartyPlugin = await (0, _jestUtil().requireOrImportModule)(\n          pluginWithConfig.path\n        );\n        plugin = new ThirdPartyPlugin({\n          config: pluginWithConfig.config,\n          stdin,\n          stdout: outputStream\n        });\n      } catch (error) {\n        const errorWithContext = new Error(\n          `Failed to initialize watch plugin \"${_chalk().default.bold(\n            (0, _slash().default)(\n              path().relative(process.cwd(), pluginWithConfig.path)\n            )\n          )}\":\\n\\n${(0, _jestMessageUtil().formatExecError)(\n            error,\n            contexts[0].config,\n            {\n              noStackTrace: false\n            }\n          )}`\n        );\n        delete errorWithContext.stack;\n        return Promise.reject(errorWithContext);\n      }\n\n      checkForConflicts(watchPluginKeys, plugin, globalConfig);\n      const hookSubscriber = hooks.getSubscriber();\n\n      if (plugin.apply) {\n        plugin.apply(hookSubscriber);\n      }\n\n      watchPlugins.push(plugin);\n    }\n  }\n\n  const failedTestsCache = new _FailedTestsCache.default();\n  let searchSources = contexts.map(context => ({\n    context,\n    searchSource: new _SearchSource.default(context)\n  }));\n  let isRunning = false;\n  let testWatcher;\n  let shouldDisplayWatchUsage = true;\n  let isWatchUsageDisplayed = false;\n\n  const emitFileChange = () => {\n    if (hooks.isUsed('onFileChange')) {\n      const projects = searchSources.map(({context, searchSource}) => ({\n        config: context.config,\n        testPaths: searchSource.findMatchingTests('').tests.map(t => t.path)\n      }));\n      hooks.getEmitter().onFileChange({\n        projects\n      });\n    }\n  };\n\n  emitFileChange();\n  hasteMapInstances.forEach((hasteMapInstance, index) => {\n    hasteMapInstance.on('change', ({eventsQueue, hasteFS, moduleMap}) => {\n      const validPaths = eventsQueue.filter(({filePath}) =>\n        (0, _isValidPath.default)(globalConfig, filePath)\n      );\n\n      if (validPaths.length) {\n        const context = (contexts[index] = (0, _createContext.default)(\n          contexts[index].config,\n          {\n            hasteFS,\n            moduleMap\n          }\n        ));\n        activePlugin = null;\n        searchSources = searchSources.slice();\n        searchSources[index] = {\n          context,\n          searchSource: new _SearchSource.default(context)\n        };\n        emitFileChange();\n        startRun(globalConfig);\n      }\n    });\n  });\n\n  if (!hasExitListener) {\n    hasExitListener = true;\n    process.on('exit', () => {\n      if (activePlugin) {\n        outputStream.write(_ansiEscapes().default.cursorDown());\n        outputStream.write(_ansiEscapes().default.eraseDown);\n      }\n    });\n  }\n\n  const startRun = globalConfig => {\n    if (isRunning) {\n      return Promise.resolve(null);\n    }\n\n    testWatcher = new (_jestWatcher().TestWatcher)({\n      isWatchMode: true\n    });\n    _jestUtil().isInteractive &&\n      outputStream.write(_jestUtil().specialChars.CLEAR);\n    preRunMessagePrint(outputStream);\n    isRunning = true;\n    const configs = contexts.map(context => context.config);\n    const changedFilesPromise = (0, _getChangedFilesPromise.default)(\n      globalConfig,\n      configs\n    );\n    return (0, _runJest.default)({\n      changedFilesPromise,\n      contexts,\n      failedTestsCache,\n      filter,\n      globalConfig,\n      jestHooks: hooks.getEmitter(),\n      onComplete: results => {\n        isRunning = false;\n        hooks.getEmitter().onTestRunComplete(results); // Create a new testWatcher instance so that re-runs won't be blocked.\n        // The old instance that was passed to Jest will still be interrupted\n        // and prevent test runs from the previous run.\n\n        testWatcher = new (_jestWatcher().TestWatcher)({\n          isWatchMode: true\n        }); // Do not show any Watch Usage related stuff when running in a\n        // non-interactive environment\n\n        if (_jestUtil().isInteractive) {\n          if (shouldDisplayWatchUsage) {\n            outputStream.write(usage(globalConfig, watchPlugins));\n            shouldDisplayWatchUsage = false; // hide Watch Usage after first run\n\n            isWatchUsageDisplayed = true;\n          } else {\n            outputStream.write(showToggleUsagePrompt());\n            shouldDisplayWatchUsage = false;\n            isWatchUsageDisplayed = false;\n          }\n        } else {\n          outputStream.write('\\n');\n        }\n\n        failedTestsCache.setTestResults(results.testResults);\n      },\n      outputStream,\n      startRun,\n      testWatcher\n    }).catch(\n      (\n        error // Errors thrown inside `runJest`, e.g. by resolvers, are caught here for\n      ) =>\n        // continuous watch mode execution. We need to reprint them to the\n        // terminal and give just a little bit of extra space so they fit below\n        // `preRunMessagePrint` message nicely.\n        console.error(\n          `\\n\\n${(0, _jestMessageUtil().formatExecError)(\n            error,\n            contexts[0].config,\n            {\n              noStackTrace: false\n            }\n          )}`\n        )\n    );\n  };\n\n  const onKeypress = key => {\n    if (\n      key === _jestWatcher().KEYS.CONTROL_C ||\n      key === _jestWatcher().KEYS.CONTROL_D\n    ) {\n      if (typeof stdin.setRawMode === 'function') {\n        stdin.setRawMode(false);\n      }\n\n      outputStream.write('\\n');\n      (0, _exit().default)(0);\n      return;\n    }\n\n    if (activePlugin != null && activePlugin.onKey) {\n      // if a plugin is activate, Jest should let it handle keystrokes, so ignore\n      // them here\n      activePlugin.onKey(key);\n      return;\n    } // Abort test run\n\n    const pluginKeys = (0, _watchPluginsHelpers.getSortedUsageRows)(\n      watchPlugins,\n      globalConfig\n    ).map(usage => Number(usage.key).toString(16));\n\n    if (\n      isRunning &&\n      testWatcher &&\n      ['q', _jestWatcher().KEYS.ENTER, 'a', 'o', 'f']\n        .concat(pluginKeys)\n        .includes(key)\n    ) {\n      testWatcher.setState({\n        interrupted: true\n      });\n      return;\n    }\n\n    const matchingWatchPlugin = (0,\n    _watchPluginsHelpers.filterInteractivePlugins)(\n      watchPlugins,\n      globalConfig\n    ).find(plugin => getPluginKey(plugin, globalConfig) === key);\n\n    if (matchingWatchPlugin != null) {\n      if (isRunning) {\n        testWatcher.setState({\n          interrupted: true\n        });\n        return;\n      } // \"activate\" the plugin, which has jest ignore keystrokes so the plugin\n      // can handle them\n\n      activePlugin = matchingWatchPlugin;\n\n      if (activePlugin.run) {\n        activePlugin.run(globalConfig, updateConfigAndRun).then(\n          shouldRerun => {\n            activePlugin = null;\n\n            if (shouldRerun) {\n              updateConfigAndRun();\n            }\n          },\n          () => {\n            activePlugin = null;\n            onCancelPatternPrompt();\n          }\n        );\n      } else {\n        activePlugin = null;\n      }\n    }\n\n    switch (key) {\n      case _jestWatcher().KEYS.ENTER:\n        startRun(globalConfig);\n        break;\n\n      case 'a':\n        globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n          mode: 'watchAll',\n          testNamePattern: '',\n          testPathPattern: ''\n        });\n        startRun(globalConfig);\n        break;\n\n      case 'c':\n        updateConfigAndRun({\n          mode: 'watch',\n          testNamePattern: '',\n          testPathPattern: ''\n        });\n        break;\n\n      case 'f':\n        globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n          onlyFailures: !globalConfig.onlyFailures\n        });\n        startRun(globalConfig);\n        break;\n\n      case 'o':\n        globalConfig = (0, _updateGlobalConfig.default)(globalConfig, {\n          mode: 'watch',\n          testNamePattern: '',\n          testPathPattern: ''\n        });\n        startRun(globalConfig);\n        break;\n\n      case '?':\n        break;\n\n      case 'w':\n        if (!shouldDisplayWatchUsage && !isWatchUsageDisplayed) {\n          outputStream.write(_ansiEscapes().default.cursorUp());\n          outputStream.write(_ansiEscapes().default.eraseDown);\n          outputStream.write(usage(globalConfig, watchPlugins));\n          isWatchUsageDisplayed = true;\n          shouldDisplayWatchUsage = false;\n        }\n\n        break;\n    }\n  };\n\n  const onCancelPatternPrompt = () => {\n    outputStream.write(_ansiEscapes().default.cursorHide);\n    outputStream.write(_jestUtil().specialChars.CLEAR);\n    outputStream.write(usage(globalConfig, watchPlugins));\n    outputStream.write(_ansiEscapes().default.cursorShow);\n  };\n\n  if (typeof stdin.setRawMode === 'function') {\n    stdin.setRawMode(true);\n    stdin.resume();\n    stdin.setEncoding('utf8');\n    stdin.on('data', onKeypress);\n  }\n\n  startRun(globalConfig);\n  return Promise.resolve();\n}\n\nconst checkForConflicts = (watchPluginKeys, plugin, globalConfig) => {\n  const key = getPluginKey(plugin, globalConfig);\n\n  if (!key) {\n    return;\n  }\n\n  const conflictor = watchPluginKeys.get(key);\n\n  if (!conflictor || conflictor.overwritable) {\n    watchPluginKeys.set(key, {\n      overwritable: false,\n      plugin\n    });\n    return;\n  }\n\n  let error;\n\n  if (conflictor.forbiddenOverwriteMessage) {\n    error = `\n  Watch plugin ${_chalk().default.bold.red(\n    getPluginIdentifier(plugin)\n  )} attempted to register key ${_chalk().default.bold.red(`<${key}>`)},\n  that is reserved internally for ${_chalk().default.bold.red(\n    conflictor.forbiddenOverwriteMessage\n  )}.\n  Please change the configuration key for this plugin.`.trim();\n  } else {\n    const plugins = [conflictor.plugin, plugin]\n      .map(p => _chalk().default.bold.red(getPluginIdentifier(p)))\n      .join(' and ');\n    error = `\n  Watch plugins ${plugins} both attempted to register key ${_chalk().default.bold.red(\n      `<${key}>`\n    )}.\n  Please change the key configuration for one of the conflicting plugins to avoid overlap.`.trim();\n  }\n\n  throw new (_jestValidate().ValidationError)(\n    'Watch plugin configuration error',\n    error\n  );\n};\n\nconst getPluginIdentifier = (\n  plugin // This breaks as `displayName` is not defined as a static, but since\n) =>\n  // WatchPlugin is an interface, and it is my understanding interface\n  // static fields are not definable anymore, no idea how to circumvent\n  // this :-(\n  // @ts-expect-error: leave `displayName` be.\n  plugin.constructor.displayName || plugin.constructor.name;\n\nconst getPluginKey = (plugin, globalConfig) => {\n  if (typeof plugin.getUsageInfo === 'function') {\n    return (\n      plugin.getUsageInfo(globalConfig) || {\n        key: null\n      }\n    ).key;\n  }\n\n  return null;\n};\n\nconst usage = (globalConfig, watchPlugins, delimiter = '\\n') => {\n  const messages = [\n    (0, _activeFiltersMessage.default)(globalConfig),\n    globalConfig.testPathPattern || globalConfig.testNamePattern\n      ? `${_chalk().default.dim(' \\u203A Press ')}c${_chalk().default.dim(\n          ' to clear filters.'\n        )}`\n      : null,\n    `\\n${_chalk().default.bold('Watch Usage')}`,\n    globalConfig.watch\n      ? `${_chalk().default.dim(' \\u203A Press ')}a${_chalk().default.dim(\n          ' to run all tests.'\n        )}`\n      : null,\n    globalConfig.onlyFailures\n      ? `${_chalk().default.dim(' \\u203A Press ')}f${_chalk().default.dim(\n          ' to quit \"only failed tests\" mode.'\n        )}`\n      : `${_chalk().default.dim(' \\u203A Press ')}f${_chalk().default.dim(\n          ' to run only failed tests.'\n        )}`,\n    (globalConfig.watchAll ||\n      globalConfig.testPathPattern ||\n      globalConfig.testNamePattern) &&\n    !globalConfig.noSCM\n      ? `${_chalk().default.dim(' \\u203A Press ')}o${_chalk().default.dim(\n          ' to only run tests related to changed files.'\n        )}`\n      : null,\n    ...(0, _watchPluginsHelpers.getSortedUsageRows)(\n      watchPlugins,\n      globalConfig\n    ).map(\n      plugin =>\n        `${_chalk().default.dim(' \\u203A Press')} ${\n          plugin.key\n        } ${_chalk().default.dim(`to ${plugin.prompt}.`)}`\n    ),\n    `${_chalk().default.dim(' \\u203A Press ')}Enter${_chalk().default.dim(\n      ' to trigger a test run.'\n    )}`\n  ];\n  return `${messages.filter(message => !!message).join(delimiter)}\\n`;\n};\n\nconst showToggleUsagePrompt = () =>\n  '\\n' +\n  `${_chalk().default.bold('Watch Usage: ')}${_chalk().default.dim(\n    'Press '\n  )}w${_chalk().default.dim(' to show more.')}`;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}